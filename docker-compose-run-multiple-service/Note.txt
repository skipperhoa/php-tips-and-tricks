# Run Docker Compose 
docker-compose up -d

# M·ªü file host c·ªßa window ch·ªânh l·∫°i :
C·∫•u h√¨nh file /etc/hosts tr√™n m√°y host
ƒê·ªÉ truy c·∫≠p c√°c domain t·ª´ m√°y c·ªßa b·∫°n, th√™m c√°c d√≤ng sau v√†o file /etc/hosts:

127.0.0.1 site1.local
127.0.0.1 site2.local

Tr√™n Linux/macOS: M·ªü t·ªáp /etc/hosts v√† th√™m d√≤ng:

127.0.0.1 site1.local
127.0.0.1 site2.local


# t·∫°o ssl 
T·∫°o th∆∞ m·ª•c ƒë·ªÉ l∆∞u ch·ª©ng ch·ªâ SSL v√† kh√≥a ri√™ng:

mkdir -p ./nginx/ssl
chmod 777 ./nginx/ssl
T·∫°o kh√≥a ri√™ng (private key) v√† ch·ª©ng ch·ªâ (certificate):

openssl req -new -newkey rsa:2048 -days 365 -nodes -keyout ./nginx/ssl/private.key -out ./nginx/ssl/certificate.crt


C√°ch nh·∫≠p üëç
Country Name (2 letter code) [AU]: VN
State or Province Name (full name) [Some-State]: Ho Chi Minh
Locality Name (e.g., city) []: Ho Chi Minh City
Organization Name (e.g., company) [Internet Widgits Pty Ltd]: My Company
Organizational Unit Name (e.g., section) []: IT Department
Common Name (e.g., server FQDN or YOUR name) []: site1.local
Email Address []: admin@mycompany.com


openssl x509 -in ./nginx/ssl/certificate.crt -out ./nginx/ssl/certificate.pem -outform PEM

https://stackoverflow.com/questions/51899844/nginx-ssl-no-start-line-expecting-trusted-certificate 
openssl req -trustout -x509 -newkey rsa:4096 -sha256 -nodes -keyout privkey.pem -out fullchain.pem -days 3650

sudo openssl dhparam -out dhparam-2048.pem 2048


openssl req -x509 -newkey rsa:2048 -keyout private.pem -out fullchain.pem -days 365 -nodes \
-subj "/C=VN/ST=HCM/L=HCM/O=HO CHI MINH/OU=HO CHI MINH/CN=site1.local" \
-addext "subjectAltName=DNS:site1.local"


Xem ngay het han cua chung Chi
root@ff102d0cd0d2:/# openssl x509 -in /etc/letsencrypt/live/site1.local/fullchain.pem -text -noout | grep "Not After"
            Not After : Nov 28 07:38:28 2025 GMT

6. Ki·ªÉm Tra K·∫øt N·ªëi SSL
D√πng l·ªánh openssl ƒë·ªÉ ki·ªÉm tra:

openssl s_client -connect site1.local:443 -servername site1.local



3. T·∫°o ch·ª©ng ch·ªâ SSL t·ª± k√Ω (Self-Signed)
N·∫øu b·∫°n ch·ªâ mu·ªën ch·ª©ng ch·ªâ SSL cho m·ª•c ƒë√≠ch ph√°t tri·ªÉn v√† th·ª≠ nghi·ªám (kh√¥ng ph·∫£i t·ª´ Let's Encrypt), b·∫°n c√≥ th·ªÉ t·∫°o m·ªôt ch·ª©ng ch·ªâ SSL t·ª± k√Ω:

openssl genpkey -algorithm RSA -out /etc/ssl/private/selfsigned.key
openssl req -new -key /etc/ssl/private/selfsigned.key -out /etc/ssl/certs/selfsigned.crt



server {
    listen 80;
    listen [::]:80;
    server_name site1.local;
    root /var/www/html/site1;
    index index.php index.html index.htm;
    
    # Chuy·ªÉn h∆∞·ªõng HTTP sang HTTPS
    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }
    location ~ /.well-known/acme-challenge {
        allow all;
        root /etc/nginx/ssl/;
    }
    # Chuy·ªÉn h∆∞·ªõng HTTP sang HTTPS
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    server_name site1.local;

    ssl_certificate /etc/letsencrypt/live/site1.local.crt;
    ssl_certificate_key /etc/letsencrypt/live/site1.local.key;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384';
    ssl_prefer_server_ciphers on;

    # Header b·∫£o m·∫≠t SSL (Optional, c√≥ th·ªÉ gi√∫p b·∫£o m·∫≠t t·ªët h∆°n)
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    root /var/www/html/site1;
    index index.php index.html index.htm;
    
    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    location ~ /.well-known/acme-challenge {
        allow all;
        root /etc/nginx/ssl/;
    }

    location ~ \.php$ {
        include fastcgi_params;
        fastcgi_pass app:9000;  # Tr·ªè ƒë·∫øn container PHP (t√™n service l√† php)
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    }
}


